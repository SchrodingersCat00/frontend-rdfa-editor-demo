import { typeOf } from '@ember/utils';
import { assert } from '@ember/debug';
import Transform from 'ember-data/transform';

const LangString = function(content, lang){
  this.content = content;
  this.language = lang;
  this.toString = function() { return `${this['content']} (${this['language']})`; };
};

const LangStringSet = Transform.extend({
  deserialize(serialized) {
    assert(`Expected array but got ${typeOf(serialized)}`, (!serialized) || (typeOf(serialized) === 'array'));
    serialized = serialized.map(function(item) {
      return new LangString(item['content'], item['language']);
    });

    return serialized;
  },
  serialize(deserialized) {
    assert(`Expected array but got ${typeOf(deserialized)}`, (!deserialized) || (typeOf(deserialized) === 'array'));
    return deserialized;
  }
});

export {
  LangStringSet as default,
  LangString
};
